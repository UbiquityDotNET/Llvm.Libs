<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    Global references are included in ALL projects in this repository EXCEPT for VCXPROJ FILES.
    VCXPROJ uses the old style Packages.Config... (and that ain't changin' anytime soon apparently...
    [read - never gonna happen])
    -->
  <ItemGroup>
    <GlobalPackageReference Include="Ubiquity.NET.Versioning.Build.Tasks" Version="5.0.6" Condition="'$(MSBuildProjectExtension)' != '.vcxproj'" />
    <GlobalPackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="9.0.0" Condition="'$(NoCommonAnalyzers)' != 'true'" />
    <GlobalPackageReference Include="IDisposableAnalyzers" Version="4.0.8" Condition="'$(NoCommonAnalyzers)' != 'true'" />
    <GlobalPackageReference Include="MustUseRetVal" Condition="'$(NoCommonAnalyzers)' != 'true'" Version="0.0.2" />
    <!--
        NOTE: This analyzer is sadly, perpetually in "pre-release mode". There have been many issues/discussion on the point
        and it has all fallen on deaf ears. So policies regarding "NO-Prerelease" components need to be overruled on this one.

        This has NO use on C/C++ builds, and in fact NuGet is screwed up if it is included such that it WON'T resolve entries
        in packages.config (It seems to think it's a PackageReferences project even though it most definitely is NOT!)
        -->
    <GlobalPackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.556" Condition="'$(UseStyleCop)' != 'false' AND '$(MSBuildProjectExtension)'!='.vcxproj'" />
  </ItemGroup>
  <!--
    Package versions made consistent across all packages referenced in this repository
    -->
  <ItemGroup>
    <PackageVersion Include="System.IO.Hashing" Version="9.0.3" />
    <PackageVersion Include="System.CodeDom" Version="9.0.7" />
    <PackageVersion Include="System.Linq.Async" Version="6.0.1" />
    <PackageVersion Include="CppSharp" Version="1.1.5.3168" />
    <PackageVersion Include="CommandLineParser" Version="2.9.1" />
  </ItemGroup>
</Project>
