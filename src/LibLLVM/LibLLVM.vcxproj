<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- Disable modern Managed code project NUGET resolution, this is a VCXPROJ file with manual restore -->
    <ResolveNuGetPackages>false</ResolveNuGetPackages>
    <!-- Directory.Build.props NOT yet imported so this MUST essentially replicate BuildOutputPackagesDir -->
    <PackagesRoot>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)../../BuildOutput/packages'))</PackagesRoot>
    <RuntimeIdentifier Condition="'$(RuntimeIdentifier)'==''">win-x64</RuntimeIdentifier>
    <!-- TODO: Support SourceLink [See: https://github.com/dotnet/sourcelink#using-source-link-in-c-projects]-->
  </PropertyGroup>
  <Import Project="$(PackagesRoot)CSemVer.Build.Tasks.2.0.5\build\CSemVer.Build.Tasks.props" Condition="Exists('$(PackagesRoot)CSemVer.Build.Tasks.2.0.5\build\CSemVer.Build.Tasks.props')" />
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{6C77A7DE-D464-430F-96A9-A64768763B5F}</ProjectGuid>
    <PlatformToolset>v143</PlatformToolset>
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>LibLLVM</RootNamespace>
    <ProjectName>LibLLVM</ProjectName>
    <AdditionalDependencies>@(AllLlvmLibs);$(AdditionalDependencies)</AdditionalDependencies>
    <GenerateVersionInfoHeader>true</GenerateVersionInfoHeader>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
    <!--
    For ease of local development in IDE, pick the most common native target.
    FOr the additional target it is the most likely "last built" LLVM target.
    In automated/command line builds this is provided by scripting/build matrix
    and always matches what was built for the LLVM libraries.
    -->
    <LibLLVMNativeTarget Condition="'$(LibLLVMNativeTarget)'==''">X86</LibLLVMNativeTarget>
    <LibLLVMAdditionalTarget Condition="'$(LibLLVMAdditionalTarget)'==''">XCore</LibLLVMAdditionalTarget>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(PackagesRoot)CSemVer.Build.Tasks.2.0.5\build\CSemVer.Build.Tasks.targets" Condition="Exists('$(PackagesRoot)CSemVer.Build.Tasks.2.0.5\build\CSemVer.Build.Tasks.targets')" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
    <Import Project="$(MSBuildThisFileDirectory)..\..\llvm-libs.props" />
    <Import Project="LlvmApplication.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <TargetName>Ubiquity.NET.$(MSBuildProjectName)-$(LibLLVMAdditionalTarget)</TargetName>
  </PropertyGroup>
  <!--
  These **MUST** match the LLVM static libraries settings for a Release build as that is the ONLY way those are built/packaged
  The DEBUG build is too large and cumbersome to manage using "FREE/OSS" build infrastructure.
  -->
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalOptions>%(AdditionalOptions) /Zc:__cplusplus /bigobj -w14062 /Gw /EHs-c-</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <AdditionalIncludeDirectories>include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <ConformanceMode>true</ConformanceMode>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4141;4146;4244;4267;4291;4351;4456;4457;4458;4459;4503;4624;4722;4100;4127;4512;4505;4610;4510;4702;4245;4706;4310;4701;4703;4389;4611;4805;4204;4577;4091;4592;4319;4709;5105;4324;4251;4275</DisableSpecificWarnings>
      <ExceptionHandling />
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RemoveUnreferencedCodeData>true</RemoveUnreferencedCodeData>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <TreatSpecificWarningsAsErrors>4238</TreatSpecificWarningsAsErrors>
      <UseFullPaths>false</UseFullPaths>
      <UseStandardPreprocessor>true</UseStandardPreprocessor>
      <WarningLevel>Level4</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;_HAS_EXCEPTIONS=0;_CRT_SECURE_NO_DEPRECATE;_CRT_SECURE_NO_WARNINGS;_CRT_NONSTDC_NO_DEPRECATE;_CRT_NONSTDC_NO_WARNINGS;_SCL_SECURE_NO_DEPRECATE;_SCL_SECURE_NO_WARNINGS;UNICODE;_UNICODE;__STDC_CONSTANT_MACROS;__STDC_FORMAT_MACROS;__STDC_LIMIT_MACROS;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <ModuleDefinitionFile>EXPORTS.g.DEF</ModuleDefinitionFile>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <None Include="cpp.hint" />
    <None Include="EXPORTS.g.DEF" />
    <None Include="include\ReadMe.md" />
    <None Include="packages.config">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="AnalysisBindings.cpp" />
    <ClCompile Include="AttributeBindings.cpp" />
    <ClCompile Include="ContextBindings.cpp" />
    <ClCompile Include="DataLayoutBindings.cpp" />
    <ClCompile Include="ObjectFileBindings.cpp" />
    <ClCompile Include="InlinedExports.cpp" />
    <ClCompile Include="IRBindings.cpp" />
    <ClCompile Include="MetadataBindings.cpp" />
    <ClCompile Include="ModuleBindings.cpp" />
    <ClCompile Include="OrcJITv2Bindings.cpp" />
    <ClCompile Include="PassBuilderOptionsBindings.cpp" />
    <ClCompile Include="TargetRegistrationBindings.cpp" />
    <ClCompile Include="TripleBindings.cpp" />
    <ClCompile Include="ValueBindings.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="Resource.rc">
      <AdditionalIncludeDirectories>$(IntermediateOutputPath);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="include\libllvm-c\AnalysisBindings.h" />
    <ClInclude Include="include\libllvm-c\AttributeBindings.h" />
    <ClInclude Include="include\libllvm-c\ContextBindings.h" />
    <ClInclude Include="include\libllvm-c\DataLayoutBindings.h" />
    <ClInclude Include="include\libllvm-c\IRBindings.h" />
    <ClInclude Include="include\libllvm-c\MetadataBindings.h" />
    <ClInclude Include="include\libllvm-c\ModuleBindings.h" />
    <ClInclude Include="include\libllvm-c\ObjectFileBindings.h" />
    <ClInclude Include="include\libllvm-c\OrcJITv2Bindings.h" />
    <ClInclude Include="include\libllvm-c\PassBuilderOptionsBindings.h" />
    <ClInclude Include="include\libllvm-c\TargetRegistrationBindings.h" />
    <ClInclude Include="include\libllvm-c\TripleBindings.h" />
    <ClInclude Include="include\libllvm-c\ValueBindings.h" />
    <ClInclude Include="include\ValueCache.h" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="targetver.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <Import Project="$(MSBuildThisFileDirectory)..\..\llvm-libs.targets" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Message Importance="High" Text="PlatformConfiguration: $(Platform)|$(Configuration)" />
    <Error Condition="!Exists('$(PackagesRoot)CSemVer.Build.Tasks.2.0.5\build\CSemVer.Build.Tasks.props')" Text="$([System.String]::Format('$(ErrorText)', '$(PackagesRoot)CSemVer.Build.Tasks.2.0.5\build\CSemVer.Build.Tasks.props'))" />
    <Error Condition="!Exists('$(PackagesRoot)CSemVer.Build.Tasks.2.0.5\build\CSemVer.Build.Tasks.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(PackagesRoot)CSemVer.Build.Tasks.2.0.5\build\CSemVer.Build.Tasks.targets'))" />
  </Target>
</Project>
