<!--
Project to build the NUGET Meta package

NOTE:
To support a meta package where the referenced packages may not exist at build time this must use a NUSPEC file directly.
The Build process for CSPROJ files will require resolving the referenced packages before it "generates" the NuSpec file.
The CSPROJ system for MSBUILD will try to restore referenced packages etc... and basically requires the ability to find
the listed dependencies. (They won't exist yet for this build/repo)
-->
<Project Sdk="Microsoft.Build.NoTargets">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <NuSpecFile>Ubiquity.NET.LibLlvm.nuspec</NuSpecFile>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>

    <!-- Disable default inclusion of all items and analyzers. This project doesn't use/need them -->
    <EnableDefaultItems>false</EnableDefaultItems>
    <EnableNETAnalyzers>false</EnableNETAnalyzers>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <NoCommonAnalyzers>true</NoCommonAnalyzers>

    <Authors>LLVM.org,Ubiquity.NET</Authors>
    <Description>Meta Package of Extended C APIs dynamic libraries for Ubiquity.NET.Llvm.Interop [$(LlvmVersion)]. Direct use of this package **STRONGLY** discouraged (You are on your own!), instead you should use the Ubiquity.NET.Llvm package, which provides a full C# object model projection of the LLVM APIs on top of this library.</Description>
    <PackageTags>LLVM</PackageTags>
    <PackageProjectUrl>https://github.com/UbiquityDotNET/Llvm.NET</PackageProjectUrl>
    <RepositoryUrl>https://github.com/UbiquityDotNET/Llvm.NET.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageLicenseExpression>Apache-2.0 WITH LLVM-exception</PackageLicenseExpression>
  </PropertyGroup>

  <ItemGroup>
    <None Include="PackageReadMe.md" />
    <None Include="Ubiquity.NET.LibLlvm.nuspec" />
  </ItemGroup>

  <!-- Sanity/safety ensure NO referenced packages [Even if injected by Directory.Build.packages etc...] -->
  <ItemGroup>
    <PackageReference Remove="@(PackageReference)" />
  </ItemGroup>

  <!--
  Provide the standard properties for this project to the package generation so that the NUSPEC
  file will complete the pack. The DependsOnTarget is REQUIRED as MSBUILD/VS/dotnet CLI all behave differently,
  especially with regard to release/automated builds. In particular the `PrepareVersioningForBuild` target
  may not trigger for automated builds on restore/pack even though it does for other targets. The output
  from that task is observable in the output but apparently the output ignores that it was reloaded (no
  indication of this happening is provided) so when the actual generation of the Nuspec file comes along,
  the PackageVersion is default. This now adds the Depends on AND an error if the property is still at the
  always invalid default setting.
  -->
  <Target Name="SetNuspecProperties" BeforeTargets="GenerateNuspec" DependsOnTargets="PrepareVersioningForBuild">
    <Error Code="UNLL001" Condition="'$(PackageVersion)'=='1.0.0'" Text="$PackageVersion has default value!"/>
    <PropertyGroup>
      <NuspecProperties>configuration=$(Configuration)</NuspecProperties>
      <NuspecProperties>$(NuspecProperties);packageID=$(PackageID)</NuspecProperties>
      <NuspecProperties>$(NuspecProperties);version=$(PackageVersion)</NuspecProperties>
      <NuspecProperties>$(NuspecProperties);authors=$(Authors)</NuspecProperties>
      <NuspecProperties>$(NuspecProperties);projectUrl=$(PackageProjectUrl)</NuspecProperties>
      <NuspecProperties>$(NuspecProperties);description=$(Description)</NuspecProperties>
      <NuspecProperties>$(NuspecProperties);tags=$(PackageTags)</NuspecProperties>
      <NuspecProperties>$(NuSpecProperties);licExpression=$(PackageLicenseExpression)</NuspecProperties>
      <NuSpecProperties>$(NuSpecProperties);tfmGroup=$(TargetFramework)</NuSpecProperties>
      <NuSpecProperties>$(NuSpecProperties);llvmproject=$(BuildRootDir)llvm-project</NuSpecProperties>
      <NuSpecProperties>$(NuSpecProperties);libllvmroot=$(BuildRootDir)src\LibLLVM</NuSpecProperties>
    </PropertyGroup>
  </Target>
</Project>
