<?xml version="1.0" encoding="utf-8"?>
<!--
INPUT:
    $packageID$ - ID of the package
    $version$ - Version of this package
    $authors$ - Authors of the pacakge
    $description$ - Description of the pacakge
    $tags$ - Tags to mark this package (Helps searching)
    $licExpression$ - License expression
    $projectUrl$ - URL for the project
    $tfmGroup$ - minimum Target Framework needed for the source files
    $GeneratedSourceRoot$ - root path of the generated source code
-->
<package xmlns="http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd">
    <metadata minClientVersion="4.9.0">
        <id>$packageID$</id>
        <version>$version$</version>
        <authors>$authors$</authors>
        <description>$description$</description>
        <tags>$tags$</tags>
        <license type="expression">$licExpression$</license>
        <projectUrl>$projectUrl$</projectUrl>
        <dependencies>
            <group targetFramework="$tfmGroup$" />
        </dependencies>
    </metadata>
    <files>
        <!--
        NOTE: Default NUGET build action is "Compile"; For reasons unknown there is NO way to
              set that in a CSPROJ file. In a CSPROJ file ALL content is set to a NuGet
              `buildaction` of "content" unless the target path is for runtime. (Guessing as
              I can't find docs on the point). Ultimately, there is NO means to place "content"
              into the contentFiles sub-folder AND set it to compile. Thus a NUSPEC file is
              REQUIRED to include source... [Sigh...]
        -->
        <file src="$GeneratedSourceRoot$**.cs" target="contentFiles/cs/$tfmGroup$/$packageID$/" />
    </files>
</package>
